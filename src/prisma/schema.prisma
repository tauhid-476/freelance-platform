// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(cuid())
  email        String?       @unique
  provider     Provider
  postedGigs   Gigs[]        @relation("PostedGigs")
  applications Application[] @relation("UserApplications")
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Gigs {
  id              String        @id @default(cuid())
  title           String
  description     String
  maxApplications Int
  daysLeft        Int
  image           String?
  reward          Float
  isActive        Boolean
  postedBy        User          @relation("PostedGigs", fields: [postedById], references: [id])
  postedById      String
  applications    Application[] @relation("GigApplications")
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

model Application {
  id          String   @id @default(cuid())
  status      Status
  user        User     @relation("UserApplications", fields: [userId], references: [id])
  userId      String
  gig         Gigs     @relation("GigApplications", fields: [gigId], references: [id])
  gigId       String
  email       String // Email of the applicant
  description String // Why the user wants the job
  socialLinks String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Status {
  PENDING
  ACCEPTED
  REJECTED
}

enum Provider {
  Google
}
